<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.loverqi.lease.mapper.PriceMapper" >
  <resultMap id="BaseResultMap" type="cn.loverqi.lease.pojo.Price" >
    <id column="price_id" property="priceId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="pattern" property="pattern" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    price_id, goods_id, shop_id, price, duration, pattern
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.loverqi.lease.pojo.PriceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from price
    where price_id = #{priceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from price
    where price_id = #{priceId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.loverqi.lease.pojo.PriceExample" >
    delete from price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="priceId" parameterType="cn.loverqi.lease.pojo.Price" >
    insert into price (price_id, goods_id, shop_id, 
      price, duration, pattern
      )
    values (#{priceId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, 
      #{price,jdbcType=DOUBLE}, #{duration,jdbcType=INTEGER}, #{pattern,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="priceId" parameterType="cn.loverqi.lease.pojo.Price" >
    insert into price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="priceId != null" >
        price_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="pattern != null" >
        pattern,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="priceId != null" >
        #{priceId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="pattern != null" >
        #{pattern,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.loverqi.lease.pojo.PriceExample" resultType="java.lang.Integer" >
    select count(*) from price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update price
    <set >
      <if test="record.priceId != null" >
        price_id = #{record.priceId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.pattern != null" >
        pattern = #{record.pattern,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update price
    set price_id = #{record.priceId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      duration = #{record.duration,jdbcType=INTEGER},
      pattern = #{record.pattern,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.loverqi.lease.pojo.Price" >
    update price
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="pattern != null" >
        pattern = #{pattern,jdbcType=INTEGER},
      </if>
    </set>
    where price_id = #{priceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.loverqi.lease.pojo.Price" >
    update price
    set goods_id = #{goodsId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      duration = #{duration,jdbcType=INTEGER},
      pattern = #{pattern,jdbcType=INTEGER}
    where price_id = #{priceId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="cn.loverqi.lease.pojo.PriceExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>